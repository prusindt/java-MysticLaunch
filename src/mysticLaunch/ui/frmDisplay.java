/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package mysticLaunch.ui;

import mysticLaunch.Rendering.ColoredTableCellRenderer;
import mysticLaunch.Rendering.UnEditableTableModel;
import java.awt.Dimension;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableModel;

/**
 *
 * @author IM01DXP
 */
public class frmDisplay extends JFrame {

    /**
     * Creates new form display
     */
    public frmDisplay() {
        this.setAlwaysOnTop(true);
        this.setType(javax.swing.JFrame.Type.UTILITY);
        this.setUndecorated(true);
        initComponents();
        initTable();
        centerFrame(0,-50);
    }
    
    public void centerFrame(int offsetX, int offsetY) {
       java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
       int x = (screenSize.width - this.getWidth())/2 + offsetX;
       int y = (screenSize.height-this.getHeight())/2 + offsetY;
       System.out.println("Centering on [" + x + "," + y + "].");
       setLocation( x,y );
    }    
    
    public String getInput() {
        return txtInput.getText();
    }    
    
    private void initTable() 
    {
       UnEditableTableModel TM = new UnEditableTableModel();
       tblResults.setModel(TM);
       tblResults.setRowHeight(25);
        // Setup the Icon column
        int vColIndex = 0;
        TableColumn col = tblResults.getColumnModel().getColumn(vColIndex);
        int width = 25;
        col.setPreferredWidth(width);
        col.setMaxWidth(width);
        col.setMinWidth(width);
 
        // Set the Name column to fill the rest of the table pixels
        vColIndex = 1;
        col = tblResults.getColumnModel().getColumn(vColIndex);
        width = 200;
        col.setPreferredWidth(width);
        col.setMaxWidth(width);
        col.setMinWidth(width);
 
        tblResults.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_LAST_COLUMN);
        //tblResults.setRequestFocusEnabled(true);
        tblResults.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tblMainMousePressed(evt);
            }
        });        
        tblResults.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tblMainKeyPressed(evt);
            }
        });        

        tblResults.setDefaultRenderer(java.lang.String.class, new ColoredTableCellRenderer());
        tblResults.setDefaultRenderer(java.lang.Object.class, new ColoredTableCellRenderer());
    }
    
   private void tblMainKeyPressed(java.awt.event.KeyEvent evt) {
       if (evt.getKeyCode() == 32) {
           //processTableSelection();
           System.out.println("Selected xxxx.");
       }
    }
    
    private void tblMainMousePressed(java.awt.event.MouseEvent evt) {                                     
       if (evt.getButton() == evt.BUTTON1) {
           TableModel TM = tblResults.getModel();
           if ( (TM instanceof UnEditableTableModel)  && (evt.getClickCount() == 2)) 
           {  //processTableSelection();
              System.out.println("Selected xxx.");
           }
       }
    }

    private void clearTable() {
       DefaultTableModel model = (DefaultTableModel) tblResults.getModel();
       model.setRowCount(0);
    }
    
    
    public void fillTable(List<String> data) {
       clearTable();
       initTable();
       for (String name:data) {
          addTableRow(name);
       }
       int height = pnlMain.getHeight() + (( data.size()+1 ) * tblResults.getRowHeight());
       this.setPreferredSize(new Dimension(this.getWidth(),height));
       pack();
     }    
    
    private void addTableRow(String name) {
       if( tblResults.getModel() instanceof DefaultTableModel )
       {  
          DefaultTableModel model = (DefaultTableModel) tblResults.getModel();
          int cols = model.getColumnCount();
          int rows = model.getRowCount();
          int pos = rows;
          model.insertRow(pos, new Object[cols-1]); //Dunno..
          model.setValueAt(null, pos, 0); //Image
          model.setValueAt(name, pos, 1);
       }
    }          
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        pnlAll = new javax.swing.JPanel();
        pnlMain = new javax.swing.JPanel();
        btnConfig = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();
        txtInput = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblResults = new javax.swing.JTable();

        setBackground(new java.awt.Color(0, 0, 0));

        pnlAll.setBackground(new java.awt.Color(0, 153, 255));

        pnlMain.setBackground(new java.awt.Color(117, 185, 240));

        btnConfig.setText("C");
        btnConfig.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnConfig.setMargin(new java.awt.Insets(2, 5, 2, 4));

        btnExit.setText("X");
        btnExit.setAlignmentY(0.0F);
        btnExit.setHideActionText(true);
        btnExit.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnExit.setMargin(new java.awt.Insets(2, 5, 2, 4));
        btnExit.setName(""); // NOI18N
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        jScrollPane1.setBackground(new java.awt.Color(0, 153, 0));
        jScrollPane1.setBorder(null);
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setToolTipText("");
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        tblResults.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblResults);

        javax.swing.GroupLayout pnlMainLayout = new javax.swing.GroupLayout(pnlMain);
        pnlMain.setLayout(pnlMainLayout);
        pnlMainLayout.setHorizontalGroup(
            pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMainLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtInput, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnConfig)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnExit)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMainLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pnlMainLayout.setVerticalGroup(
            pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMainLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnConfig)
                    .addComponent(btnExit)
                    .addComponent(txtInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout pnlAllLayout = new javax.swing.GroupLayout(pnlAll);
        pnlAll.setLayout(pnlAllLayout);
        pnlAllLayout.setHorizontalGroup(
            pnlAllLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlMain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        pnlAllLayout.setVerticalGroup(
            pnlAllLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlMain, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlAll, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 195, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlAll, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 61, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
        this.setVisible(false);
    }                                       

    
    // Variables declaration - do not modify                     
    private javax.swing.JButton btnConfig;
    private javax.swing.JButton btnExit;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel pnlAll;
    private javax.swing.JPanel pnlMain;
    private javax.swing.JTable tblResults;
    private javax.swing.JTextField txtInput;
    // End of variables declaration                   
}
